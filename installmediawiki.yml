---

- name: ping
  hosts: mediawiki
  become: yes
  tasks:
    - name: ping MachineCible
      ping:

# TOOLS
    - name: Installer le paquet unzip
      apt:
        name:
          - unzip
        state: present

#GNUPG
    - name: Installer le paquet gnupg
      apt:
        name:
          - gnupg
        state: present

# PHP
    - name: Ajouter le repository de php
      apt_repository:
        repo: 'ppa:ondrej/php'

    - name: installer php5.6
      package:
        name: "{{ item }}"
        state: present
      loop:
        - php5.6
        - php5.6-fpm
        - php5.6-mysql
        - php5.6-xml
        - php5.6-curl
        - php5.6-gd
        - php5.6-intl
        - php5.6-json
        - php5.6-mbstring

    - name: Désinstaller Apache
      apt:
        name: apache2
        state: absent
        purge: yes

#Nginx

    - name: installer Nginx
      package:
        name: nginx
        state: present

    - name: Démarrer Nginx
      service:
        name: nginx
        state: started
        enabled: yes

#MySQL

    - name: Installer mysql
      package:
        name: "{{item}}"
        state: present
      loop:
        - mysql-server
        - python-mysqldb

    - name: Créer mysqld.cnf
      copy:
        src: templates/mysql/mysqld.cnf.j2
        dest: /etc/mysql/mysql.conf.d/mysqld.cnf

    - name: Démarrer mysql
      service:
        name: mysql
        state: started

    - name: Enable MySQL
      service:
        name: mysql
        enabled: yes

    - name: Generate new root password
      command: openssl rand -hex 7
      args:
        creates: /root/.my.cnf
      register: mysql_new_root_pass

    - name: Remove anonymous users
      mysql_user:
        name: ""
        state: absent
      when: mysql_new_root_pass.changed

    - name: Remove test database
      mysql_db:
        name: test
        state: absent
      when: mysql_new_root_pass.changed

    - name: Output new root password
      debug:
        msg: "New root password is {{mysql_new_root_pass.stdout}}"
      when: mysql_new_root_pass.changed

    - name: Update root password
      mysql_user:
        name: root
        host: "{{ item }}"
        password: "{{mysql_new_root_pass.stdout}}"
      loop:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost
      when: mysql_new_root_pass.changed

    - name: Create my.cnf
      template:
        src: templates/mysql/my.cnf.j2
        dest: /root/.my.cnf
      when: mysql_new_root_pass.changed

    - name: Create MySQL database
      mysql_db:
        name: wiki
        state: present
      notify: stop mysql

    - name: Create MySQL user
      mysql_user:
        name: wiki
        host: localhost
        password: password
        priv: wiki.*:ALL

# Pare-feu
    - name: pare-feu enable
      ufw:
        state: enabled

    - name: autoriser ssh
      ufw:
        rule: allow
        name: OpenSSH

    - name:
      ufw:
        rule: allow
        name: 'Nginx HTTP'

# Configuration Nginx

    - name: Configuration Nginx
      template:
        src: templates/nginx/default.j2
        dest: /etc/nginx/sites-available/default
      notify: restart nginx

# Mediawiki

    - name: Creer répertoire de livraison
      file:
        dest: /appli/wikidevops/LIVR
        state: directory

    - name: Create root server folder
      file:
        dest: /appli/projects/md1/nginx/
        state: directory

    - name: Copier Donnees.xml dans le répertoire de livraison
      copy:
        src: files/Donnees.xml
        dest: /appli/wikidevops/LIVR

    - name: Désarchiver wiki_devops.tar.gz
      unarchive:
        src: files/wiki_devops.tar.gz
        dest: /appli/projects/md1
        mode: 0755
        owner: www-data
        group: www-data

    - name: Renommer wiki_devops en nginx
      command: mv /appli/projects/md1/wiki_devops /appli/projects/md1/wiki

    - name: Install php
      command: php /appli/projects/md1/nginx/wiki/maintenance/install.php --dbname=wiki --dbserver=localhost --dbuser=wiki --dbpass=password --lang=fr --pass=password --scriptpath=/ "wiki" "wiki"

    - name: Import Donnees.xml
      command: php /appli/projects/md1/nginx/wiki/maintenance/importDump.php < /appli/wikidevops/LIVR/Donnees.xml

    - name: Rebuild recent changes
      command: php /appli/projects/md1/nginx/wiki/maintenance/rebuildrecentchanges.php

    - name: Unarchive Images
      unarchive:
        src: files/dump_image.tar.gz
        dest: /appli/wikidevops/LIVR

    - name: Import images
      command: php /appli/projects/md1/nginx/wiki/maintenance/importImages.php /appli/wikidevops/LIVR/images/

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted

    - name: stop mysql
      service:
        name: mysql
        state: stopped
